drop table if exists participant_requests;
drop table if exists events;
drop table if exists users;
drop table if exists categories;
drop table if exists compilations;

CREATE TABLE if not exists users (
	id int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	user_name varchar(250) NULL,
	user_email varchar(256) NULL,
	CONSTRAINT users_pk PRIMARY KEY (id),
	CONSTRAINT users_unique UNIQUE (user_email)
);

CREATE TABLE if not exists categories (
	id int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	category_name varchar(50) NOT NULL,
	CONSTRAINT categories_name_unique UNIQUE (category_name),
	CONSTRAINT categories_pk PRIMARY KEY (id)
);

create table if not exists compilations (
    id int8 generated by default as identity not null,
    title varchar(50) not null,
    pinned bool,
    constraint compilations_pk primary key (id),
    constraint compilations_unique unique (title)
);

CREATE TABLE if not exists events (
	id int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	annotation varchar(2000) NOT NULL,
	category_id int8 NOT NULL,
	description varchar(7000) NOT NULL,
	event_date timestamp without time zone NOT NULL,
	lat float4 NOT NULL,
	lon float4 NOT NULL,
	paid bool NULL,
	participant_limit int2 NULL,
	request_moderation bool NULL,
	title varchar(120) NULL,
	created timestamp without time zone not null,
	user_id int8,
	state varchar(100) not null,
	published timestamp without time zone,
	compilation_id int8,
	CONSTRAINT events_pk PRIMARY KEY (id),
	CONSTRAINT events_categories_fk FOREIGN KEY (category_id) REFERENCES categories(id),
	constraint events_users_fk foreign key(user_id) references users(id),
	constraint events_compilations_fk foreign key(compilation_id) references compilations(id) on delete set null
);

create table if not exists participant_requests (
    id int8 generated by default as identity not null,
    status varchar(100) not null,
    created timestamp without time zone NOT NULL,
    user_id int8,
    event_id int8,
    constraint requests_pk primary key(id),
    constraint requests_uq UNIQUE (user_id, event_id),
    constraint requests_users_fk foreign key(user_id) references users(id),
    constraint requests_events_fk foreign key(event_id) references events(id)
);